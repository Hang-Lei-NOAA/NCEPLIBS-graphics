#%Module######################################################################
## Eugene Mirvis RAL/NCAR-EMC/NOAA
## Xiaoxue Wang NCO-PMB/NOAA modified to vertical structure
## Kit Menlove NCO-IDSB/NOAA modified for phase 2 and Cray xc40
##   graphics v2.0.0

proc ModulesHelp { } {
  puts "Set environment variables for graphics libraries: GPH_LIB8, GPHFONT_LIB8,
        GPHCNTR_LIB8, W3G_LIB8, DECOD_UT, and UTIL_LIB"
}

# Obtain the package name and version
# Note: This section requires that the module name be in the format {package name}-{compiler}/${version}
#       If you are not following this convention, comment this section out and set the following variables:
#         set lname (name of the package)
#         set comp (intel, cray, or gnu)
#         set ver (version of the package in three-number format (e.g. 1.0.0))
if { [ regexp {(\w+)-(\w+)(?:-\w+)?/(\d+\.\d+\.\d+)$} [module-info name] -> lname comp ver ] != 1 } {
  global ModulesCurrentModulefile
  if { [ regexp {(\w+)-(\w+)(?:-\w+)?/(\d+\.\d+\.\d+)$} $ModulesCurrentModulefile -> lname comp ver ] != 1 } {
    puts stderr "Error: unable to parse module name and version from '$module_name'"
    puts stderr "Module path:  $ModulesCurrentModulefile"
    break
  }
}

# Determine the root directory of the module being loaded
# Note: This section assumes that the module is installed in the production area.  If this is being installed
#       in an alternate location, please comment this section out and set the following variable:
#         set NCEPLIBS (location of the directory that contains the library)
global ModulesCurrentModulefile
if { [ regexp {(/gpfs/hps/nco/ops/nw[^/]+/lib)} $ModulesCurrentModulefile -> NCEPLIBS ] != 1 } {
  puts stderr "Error: unable to determine library's root directory"
  break
}

#  Set necessary variables for testing
# set lname graphics
# set comp cray
# set ver 2.0.0
# set NCEPLIBS /gpfs/hps/emc/global/noscrub/Boi.Vuong/lib

# Make sure another version of the same package is not already loaded
conflict $lname-intel $lname-cray-haswell

switch $comp {
  cray { if { ( [ module-info mode load ] || [ module-info mode switch2 ] ) && [ is-loaded intel ] } {
    puts stderr "WARNING: You are loading the $comp-compiled library with the intel compiler loaded"
  } }
  intel { if { ( [ module-info mode load ] || [ module-info mode switch2 ] ) && [ is-loaded cce ] } {
    puts stderr "WARNING: You are loading the $comp-compiled library with the cce compiler loaded"
  } }
}

# Set other necessary variables
#set sys    [uname sysname]

set dlib   $NCEPLIBS/$lname/v$ver
set bname  [string toupper $lname] 

set bname1  GPH
set bname2  GPHFONT
set bname3  GPHCNTR
set bname4  W3G
set bname5  UTIL
set bname6  DECOD_UT

set lname1 gph
set lname2 gphfont
set lname3 gphcntr
set lname4 w3g
set lname5 util
set lname6 decod_ut

# Export environment variables
setenv COMP $comp
setenv ${bname}_SRC  $dlib/src
setenv ${bname1}_LIB8 $dlib/${comp}/lib${lname1}_v${ver}_8.a
setenv ${bname2}_LIB8 $dlib/${comp}/lib${lname2}_v${ver}_8.a
setenv ${bname3}_LIB8 $dlib/${comp}/lib${lname3}_v${ver}_8.a
setenv ${bname4}_LIB8 $dlib/${comp}/lib${lname4}_v${ver}_8.a
setenv ${bname5}_LIB  $dlib/${comp}/lib${lname5}_v${ver}.a
setenv ${bname6}_LIB  $dlib/${comp}/lib${lname6}_v${ver}.a
setenv ${bname}_VER v$ver
